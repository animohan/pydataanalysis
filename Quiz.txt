Import numpy and declare an array of 5 integers
Get the type of the declared variable.
Use object attribute to find the type of elements in the declared variable.
Declare an multidimensional array with 4 rows and 3 columns with integerd data. Print the number of dimensions, the shape of the array and the number of elements of the array
Declare an numpy array with input to the array being 2 tuples
Can the numpy array contain a list and tuple of numbers ?
Declare a 2*2 array element with complex data typle
declare a 3*4 numpy aray of zeroes
declare a 3*4 numpy array of ones.
declare a 5*5 with diagonal elements being 1,2,3,4,5
Declare an identity matrix of 3*3 dimension
Declare an numpy array of first 100 numbers using a range kind of function.
Declare an numpy array of first 100 even numbers using a range kind of function.
Declare an numpy array of 5 between 0-20
Declare an numpy array of 4 between 0-20
Generate a random number array of 3 elements
generate a random number array of 3*4 elements
Declare an array of 0-4 and added 4 to each elements
Declare an array of 0-4 and multiply each element  by 4
Declare an array of 0-4 and another array of 4-8 and then matrix multiply them
Declare an array of 16 random elements and reshape them to be 4*4
What are universal functions; give example
What are aggregate functions; give example
Declare a numpy array of 10 elements. Print the first number, print last number, print alternate numbers. Print numbers in reverse
Declare a 2D array and print each row of it
Declare a 2D array of 3*3 and copy the small 2*2 sub array into a new array
Declare a 2D array of 3*3 and copy the small 1st and 3rd row and all columns into a 2*3 sub array into a new array
Declare a 3*3 array and print all individual elements with 1 for loop; Hint use an attribute of the array
Declare an 4*3 array and find mean of rows and columns. int use a np.function similar to apply
Define a function to return half of value of sum of arguments and use it in apply type function
Declare a random array of 4*4 and return values that are greater than .5
Declare an random array of 12 elements. Use reshape method to get and array of 3*4; Does the reshape change the original array a? If no, what can bve done to change that
Declare a 3*3 array; We learnt about flat attribute; which method has similar behavior as flat.
Declare and transpose a matrix
Declare u arrays of same size and vertically and horizontall stack them
Declare 2 single dimentions array; Arrange them using a np function such that each single dimension vector is the column of the resulting matrix
Declare array of 3*3 and 3*2; can we vertical or horizontal stack them?
Declare an array of 4*4, split in 3 arrays where middle column 0 is first array, Column 1 and 2 are 2nd array and column 3 is the 4th array.
Varitions of above; splits as 2 columns, 2 columns 0 columns
Varitions of abovesplit as 3 column 1 column 0 columns

Declare an array a; assign b to the same array; change 3rd element of a to 975; does it change for b?
Does the above result change if we copy with slicing?
How can an array be actually copied to another variable.
Broadcasting: Declare 1*4 array and 4*4 array and add them; what happends
Structured array: define an np array where each row is a list and contains a integer, text, float and a complex number. There are multiple rows; need to specify dtypel
Declare an np array and save it do disk
Read an already availalbe numpy file from disk
Read from a csv in a disk


#PANDAS
Declare a series object with data = [12,1,2,3]
Get the index of the series object declared
Get the values of the series object
Declare a series object with data  = [1,2,3,4] and indices being a, b,c,d
For the Series object above, access the value in a Series object with an index (both new declared index and the default index)
Write a for loop to get all element of the series object = [1,2,3,5]
Write a for loop to loop through the index and get the values of the Series object
Series object with data = [1,2,3,4], index = a,b,c,d; Access data through slicing index. Does slicing be done with strings as indices
For the above series object change the value corresponding to index b to 999
Declare a numpy array = [1,2,3,4]. Create a series object of the array and assign it of variable. Change value of numpy array. Does the series object value change ?
Can a new series object be declared from another series object?
Declare a series object with data [1,77,4,3,55,24]. Get values above 50
Find which places/positions have value > 50
Declare a series object; Divide by 2; Take log of Series
Declare a Series object: [1,1,2,3,5] indices are ["a","b","c","c","d"]. Get the indices of elements which are unique. Does both index of 1 show up?
For the same object above, get the counts of the values
Check membership; Are the values declared above in the list [1,3] ? Use a membership function. Can you give a range in membership function? 
Declare a series which has NaN object; Does the NaN has to be the numpy object?
For the above series with NaN value; find the indices that do not have values and that have values assigned; Hint: Us a series function for not having values and having values
Declare a Dictionory with keys = red, green, blue, yellow, pink and values = 1,2,3,4,5; Print keys and values of dictionary. Use this dictionary to create a Series. Print the index and values of the Series data
Declare a Dictionory with keys = red, green, blue, yellow, pink and values = 1,2,3,4,5; Create a Series data with data from dictionory and indices as red, green, blue, white. What is the value assigned to white index equivalent.

Declare two dictionary with colors as index and values. first dictionary has following keys: red, green, yellow, blue; second dictionary has following keys: green, yellow, belue, white; Now create series and add the series. 


#Dataframes
Declare a dictionary = data with keys = color- red,pink, blue, grey; objects - cup, pin, mug, bat and values-1,2,3,4. Create a Dataframe out of it. Call it u
From the 1st dataframe u- create another data frame that only contains the columns objects and price
create a dataframe from dictionary; assingn indices to data
Create a dataframe with index = colors(red, blue..), columns = objects(pin,mug,bat, ball) and the entries being 0..16 numbers
Print the columns, index and all values for the above table
print the entries corresponding to an object column. Use two different ways to get the column
print entries corresponding to a row
print rows 1 to 3
print rows 1 and 3
Extract values of a column but rows 1 and 3
Assign name to the index and to the column names
Add a new columns with same value replicated for all rows
Add a new columns with specific values
Create a new series object with exactly same index as the data frame and add it as a column.
Create a new series object with one different index as the data frame and add it as a column.
In a dataframe which has values say 0..16, find if there are values between 4-6. need to use a function
In a dataframe which has values say 0..16, get the dataframe which has values between 4-6; what happens to the other values
Do selective filtering for values> 5 in the dataframe
Delete a column from a dataFrame
Declare a nested dictionary: d2 = {"color":{"blue":1,"red":2,"Green":3,"yellow":4,"Red":5},
       "object":{"ball":22,"pen":33,"pencil":44,"paper":13,"mug":34},
       "year":{2011:1,2012:1,2014:23,2016:6,2022:5},
     "loc":{"ind":2,"usa":4,"can":4,"chn":1, "rus":1}}
Look at keys and values when the dataframe is created from here
Transpose the dataframe above

#index objects
Create a series, with numeric and character index. What is the max index and the min index (max index = not max index value, but index corr to max value)
Create  series with numeric and character values; Find the max, min index; What happens when the values are character or string
Do indices have to be unique; if not, try creating a series with duplicate index. Can the duplicate index be printed
Find if index is unique. Function or attribute?
Create a series with numeric and character indices. Use a dataframe function to change the indice (change = shuffle, add , remove indices). Can this be done with both character and numeric indices
Declare a Series like this: u2 = pd.Series([0,2,4,6,8], index = [0,2,4,6,8]) What method need to be used to get values correppinding to index 1, 3,5 and 7. What are the parameters to the method and how do the parameters impact the results
Declare a data frame: u2 = pd.DataFrame(data, index = [8,6,4,2,0]),where data is the color, object, price dictionary. Reindex with filling




